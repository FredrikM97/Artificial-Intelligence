
/*
Check if return a double
check to handle negative numbers and positive
*/
#include "CUnit/Basic.h"
#include "TaylorSeries.h"

void test_expFraction(void){
	srand(time(0));
	int i, test;

	for(i = 0; i < 100;i++){//testar så att det inte kan bli störe en 2 desimaler
		test = iexp(rand())->expFraction;
		CU_ASSERT(100 > test && test >= 0);
	}
}

/* The main() function for setting up and running the tests.
 * Returns a CUE_SUCCESS on successful running, another
 * CUnit error code on failure.
 */
int main()
{
   CU_pSuite pSuite = NULL;


   /* initialize the CUnit test registry */
   if (CUE_SUCCESS != CU_initialize_registry())
      return CU_get_error();

   /* add a suite to the registry */
   pSuite = CU_add_suite("Suite_1", init_suite1, clean_suite1);
   if (NULL == pSuite) {
      CU_cleanup_registry();
      return CU_get_error();
   }

   /* add the tests to the suite */
   /* NOTE - ORDER IS IMPORTANT - MUST TEST fread() AFTER fprintf() */
   if ((NULL == CU_add_test(pSuite, "test of fprintf()", test_expFraction)))
   {
      CU_cleanup_registry();
      return CU_get_error();
   }
   /* Run all tests using the CUnit Basic interface */
   CU_basic_set_mode();
   CU_basic_run_tests();
   CU_cleanup_registry();
   return CU_get_error();
}
